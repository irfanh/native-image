# Multi-stage Dockerfile: Build native image inside Docker
FROM ghcr.io/graalvm/graalvm-community:17-ol8 AS builder

# Install native-image
RUN gu install native-image

# Copy source code
COPY . /app
WORKDIR /app

# Build native image with conservative settings
RUN ./mvnw clean package -Pnative -DskipTests \
    -Dspring.aot.jvmArguments="-Xmx3g" \
    && echo "Native build completed" \
    && ls -la target/

# Runtime stage
FROM ubuntu:22.04

# Install curl for health checks and create non-root user
RUN apt-get update && apt-get install -y curl && \
    rm -rf /var/lib/apt/lists/* && \
    groupadd -r app && useradd -r -g app app

# Copy the native executable from builder stage
COPY --from=builder /app/target/janus-native-test /app/janus-native

# Set working directory and permissions
WORKDIR /app
RUN chmod +x janus-native && chown app:app janus-native

# Switch to non-root user
USER app

# Expose port
EXPOSE 8080

# Health check endpoint
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:8080/actuator/health || exit 1

# Run the native image
ENTRYPOINT ["./janus-native"] 